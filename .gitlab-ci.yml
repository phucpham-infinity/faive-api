# Variables to add in Gitlab CI Pipeline
# STAGING_SSH_PRIVATE_KEY
# STAGING_USER
# STAGING_SERVER
# STAGING_API_PATH

stages:
  - prepare
  - deploy


default:
  before_script:
    - apt-get update -y
    - 'which ssh-agent || apt-get install openssh-client -y'
    - 'which rsync || apt-get install rsync -y'


deploy_staging:
  stage: deploy
  only:
    - staging # or any branch you want to deploy from
  script:
    - eval $(ssh-agent -s)
    - echo "$STAGING_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - ssh $STAGING_USER@$STAGING_SERVER "mkdir -p $STAGING_API_PATH"
    - cat $STAGING_API_ENV > .env
    - rsync -avz --exclude='.git*' ./ $STAGING_USER@$STAGING_SERVER:$STAGING_API_PATH/
    - ssh $STAGING_USER@$STAGING_SERVER "cd $STAGING_API_PATH && NODE_ENV=production && docker compose build --no-cache && docker compose up -d"
    - ssh $STAGING_USER@$STAGING_SERVER "mv $STAGING_API_PATH/nginx.conf /etc/nginx/sites-enabled/api.staging.faive.io.conf && service nginx reload"
    - ssh $STAGING_USER@$STAGING_SERVER "certbot --nginx --non-interactive --agree-tos -d api.staging.faive.io && service nginx reload"

  environment:
    name: staging
